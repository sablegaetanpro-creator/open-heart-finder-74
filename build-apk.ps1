# Script de cr√©ation d'APK automatique
Write-Host "Demarrage de la creation d'APK..." -ForegroundColor Green

# √âtape 1: Build de l'application
Write-Host "Build de l'application..." -ForegroundColor Yellow
npm run build

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erreur lors du build" -ForegroundColor Red
    exit 1
}

# √âtape 2: Synchronisation avec Capacitor
Write-Host "Synchronisation avec Android..." -ForegroundColor Yellow
npx cap sync

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erreur lors de la synchronisation" -ForegroundColor Red
    exit 1
}

# √âtape 3: Cr√©ation de l'APK
Write-Host "Creation de l'APK..." -ForegroundColor Yellow
Set-Location android
./gradlew assembleDebug

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Erreur lors de la cr√©ation de l'APK" -ForegroundColor Red
    Set-Location ..
    exit 1
}

# √âtape 4: Retour au r√©pertoire principal
Set-Location ..

# √âtape 5: V√©rification de l'APK
$apkPath = "android/app/build/outputs/apk/debug/app-debug.apk"
if (Test-Path $apkPath) {
    $fileSize = (Get-Item $apkPath).Length / 1MB
    Write-Host "APK cree avec succes !" -ForegroundColor Green
    Write-Host "üìÅ Emplacement: $apkPath" -ForegroundColor Cyan
    Write-Host "üìè Taille: $([math]::Round($fileSize, 2)) MB" -ForegroundColor Cyan
} else {
    Write-Host "‚ùå APK non trouv√©" -ForegroundColor Red
}

Write-Host "Processus termine !" -ForegroundColor Green
